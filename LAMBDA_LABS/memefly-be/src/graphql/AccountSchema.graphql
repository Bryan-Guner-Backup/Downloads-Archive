type Account{
    username:String!
    email:String!
}

type register{
    message:String
    created: Boolean!
}
type login{
    message:String
    token:String
    loggedIn:Boolean!
}
type update{
    message:String,
    updated:Boolean!
}
type myAccount{
    message:String
    account:Account  
    status:Boolean!
}
type follow{
    message:String
    followed:Boolean!
}
type unfollow{
    message:String
    unfollowed:Boolean!
}
type searchAccount{
    username:String!
    followers:Int!
    following:Int!
}
type uploadMeme{
    message:String
    uploaded:Boolean!
}
type meme{
    encoding:String!
    fileType:String!
    title:String!
    key:String!
}
type savedMemes{
    meme:meme!
    key:String!
}
type MEMES{
    message:String
    memes:[savedMemes!]!
    fetched:Boolean!
}
type deleted{
    message:String
    deleted:Boolean!
}
type Mutation{
    register(username:String!, email:String!, password:String!):register!
    update(key:String!, newValue:String!, oldValue:String):update!
    follow(username:String!):follow!
    unfollow(username:String!):unfollow!
    uploadMeme(encoding:String!, fileType:String!, title:String!):uploadMeme!
    deleteSavedMeme(key:String!):deleted!
}
type Query{
    login(username:String, email:String, password:String!):login!
    myAccount:myAccount!
    searchAccount(username:String!):[searchAccount!]
    getSavedMemes:MEMES!
}